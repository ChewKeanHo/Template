/*
 * COPYRIGHT LICENSE NOTICE HERE
 */
import { Owner, Metadata } from './metadata-definitions';




export const METADATA_SITE: Metadata = {
	// 'ID' is the general unique identification of the web application. A
	// good example will be the reversed URI like 'com.example.www.project'.
	//
	// Leaving this field empty can cause catastrophic failure.
	ID: "com.example.www.project",


	// 'ID_CNAME' is the content of the CNAME file generated by the engine.
	// This asset file is used by GitHub pages to setup and validate the
	// designated domain name. A good example would be the full URI path:
	// 'project.www.example.com'.
	//
	// Leaving this field empty can cause catastrophic failure.
	ID_CNAME: "project.www.example.com",


	// 'ID_APP' is the app ID used for constructing command and app
	// identifier. It must be lowercase and contain only alphabetical
	// ASCII characters [a-z] only.
	//
	// Leaving this field empty can cause catastrophic failure.
	ID_APP: 'project',


	// 'ID_SKU' is the Stock Keeping Unit identifier which consists of
	// lowercase [a-z] and dash (-) only. This field is also used as the
	// name of functional entity (e.g. command executable). A good example
	// would be 'chewkeanho-web-goto'.
	//
	// Leaving this field empty can cause catastrophic failure.
	ID_SKU: 'example-web-project',


	// 'Language_Default' sets the default language. This is a string key.
	// Recommended to use "{ISO639(set1/set2/set3)}[-{ISO15924}]' format
	// like 'en' (English), 'zh-Hans' (Simplified Chinese/Mandarin).
	//
	// The default 'en' is used to make sure everything is working as
	// intended.
	Language_Default: 'en',


	// 'NAME' is the site-level name. This field is internationalization
	// (i18n) supported.
	//
	// In any case, the default langauge's value MUST be provided.
	//
	// Leaving this field empty can cause catastrophic failure.
	Name: {
		"en": "Site Title Here",
	},


	// 'Description' is the site-level short pitch. This field is
	// internationalization (i18n) supported.
	//
	// In any case, the default langauge's value MUST be provided.
	//
	// Leaving this field empty can cause catastrophic failure.
	Description: {
		"en": "An example web app.",
	},


	// 'Keywords' are the site-level labelling & tagging list. This
	// field is internationalization (i18n) supported.
	//
	// In any case, the default langauge's value MUST be provided.
	//
	// Leaving this field empty can cause catastrophic failure.
	Keywords: {
		"en": [
			"website",
			"webapp",
		],
	},


	// 'Color_Theme_Foreground' sets the color of the foreground objects.
	//
	// Leaving this field empty can cause catastrophic failure.
	Color_Theme_Foreground: "#FFFF00",


	// 'Color_Theme_Background' sets the color of the background.
	//
	// Leaving this field empty can cause catastrophic failure.
	Color_Theme_Background: "#000428",


	// 'Owners' sets the list of owners of this site. The first entry is
	// the general contact.
	//
	//
	// 'Owners.N.UUID' is the internally used unique indentifer. This field
	// is entirely optional.
	//
	// 'Owners.N.Name_Family' is the family/first name of the entity. This
	// field is internationlized (i18n).
	//
	//
	// 'Owners.N.Name_Given' is the given/last name of the entity. This
	// field is internationalized (i18n).
	//
	//
	// 'Owners.N.Call_Sign' is the official identifer OR brand name OR
	// nickname. This field is internationalized (i18n) and optional.
	//
	//
	// 'Owners.N.Title' is the official title granted by a goverment or
	// royalty (e.g. "Sir", "Tan Sri", etc). This field is
	// internationalized (i18n). When in doubt, just use 'Mr/Ms/Mrs/Madam'.
	//
	//
	// 'Owners.N.Description' is a short pitch about the entity. This
	// field is internationalized (i18n) and optional.
	//
	//
	// 'Owners.N.Slogan' is the one-liner for the entity. This field is
	// internationalized (i18n) and optional.
	//
	//
	// 'Owners.N.Contacts' are the list of social contact channels. The keys
	// are self-defined and the corresponding value is internationalized
	// (i18n). This field is optional and can be left empty ([]).
	//
	//
	// 'Owners.N.Contacts.LANG.ID' is the ID of the contact channel. It can
	// be the username or appearing label instead of the URL. This field is
	// optional and can be left empty ('').
	//
	//
	// 'Owners.N.Contacts.LANG.Type' is the type value of channel. It can
	// be the brand name in lowercase. This field is optional and can be
	// left empty ('').
	//
	//
	// 'Owners.N.Contacts.LANG.URL' is the url value of channel. This field
	// is optional and can be left empty ('').
	//
	//
	// 'Roles' are the list of string identifiers for the entity's
	// contributions. These are self-defined identifiers so
	// Internalization (i18n) is supported externally.
	Owners: [{
		UUID: '',
		Name_Family: {
			"en": "Familia",
		},
		Name_Given: {
			"en": "Own Name",
		},
		Call_Sign: {
			"en": "Brand Name",
		},
		Title: {
			"en": "Mr.",
		},
		Description: {
			"en": "Simple Pitch",
		},
		Slogan: {
			"en": "Simple speech",
		},
		Contacts: {
			website_01: {
				"en": {
					ID: "Official Website",
					Type: "website",
					URL: "https://www.example.com",
				},
			},
		},
		Roles: [
			"Creator",
			"Contact",
			"Artwork",
			"Knowledge",
			"Editor",
			"Developer",
			"Maintainer",
			"Owner",
			"Producer",
			"Provider",
			"Publisher",
			"Reviewer",
			"Funder",
			"Sponsor"
		],
	}],


	// 'Protocol' are the app functioning entry for an external entity
	// to call this PWA web application. All URLs here MUST be in
	// relative format.
	//
	//
	// 'Start' is the starting URL of the web application. This
	// usually points the root of site. It must be a relative URL.
	// Default is '/'.
	//
	//
	// 'Scope' is the PWA application-level starting URL. It can defer
	// from the 'Start' URL (e.g. '/app'). It must be a relative URL.
	// Default is '/'.
	//
	//
	// 'Handlers' are the protocol handling definitions. This is an optional
	// field that can be left empty.
	//
	//
	// 'Handlers.N.Protocol' is the unique protocol to trigger the installed
	// PWA web application. It is recommended to prefix 'web+' into the name
	// for avoiding naming collision with the native application. Example
	// 'web+brand'.
	//
	// When a 'web+' is used, only lowercase alphabetic ASCII characters
	// [a-z] are allowed.
	//
	// If the value is '/', the engine will use 'web+{METADATA_SITE.ID_APP}'
	// as the value. It will skip the entry when left empty ('').
	//
	//
	// 'Handlers.N.URL' is the relative URL pathing for serving the
	// trigger. Use the '%s' to place the arguments as one of its query
	// item. Example '/?args=%s'. The engine will skip the entry when left
	// empty ('').
	Protocol: {
		Start: '/',
		Scope: '/',
		Handlers: [{
			Protocol: '/',
			URL: '/?args=%s',
		}],
	},


	// 'SEO' holds the required data for generating the 'robots.txt'
	// and 'sitemap.xml' search engine optimization files. For sitemap,
	// the engine employs single index format to accomandate large site
	// contents.
	//
	// By default, the engine parses the 'prerender-routes.txt' and
	// generate the required list. It add/remove any of the URL
	// explicitly declared here. With the finalized list. It generates
	// all the required 'sitemap.xml' files.
	//
	// The engine will create the 'robots.txt' file once the root
	// 'sitemap.xml' is readily available.
	//
	//
	// 'Add' holds the list of relative URLs to be added explictly
	// into the sitemap. Any duplicated values (from 'prerender-routes.txt'
	// and here) before the singularity step.
	//
	// Default is empty ([]). Always use 'prerender-routes.txt'.
	//
	//
	// 'Remove' holds the list of relative URLs to be removed from
	// being added into the sitemap after the singularity step.
	//
	// Default is '/404'.
	//
	//
	// 'Robot' holds the 'robots.txt' policies content as it is.
	//
	// Note that you DO NOT need to add 'Sitemap' explictly. The engine
	// will preprend automatically.
	SEO: {
		Add: [],
		Remove: [
			"/404"
		],
		Robot: `
User-agent: *
Allow: /
`,
	},


	// 'Related_Application' holds all the related applications across
	// various platforms together.
	//
	//
	// 'Prioritized' set the apploication to proritize all related
	// applications (e.g. mobile app from phone store) sites upon
	// successful detection. This field is used as PWA's
	// 'prefer_related_applications' value. It accepts the following
	// boolean values:
	//   (a) 'false' (default) = don't prioritize.
	//   (b) 'true'            = prioritize and redirect.
	//
	//
	// 'List' holds all the related applications data. By default, this
	// current web application is added as the first entry.
	//
	//
	// 'List.{N}.ID' is the app ID for the related application in its store.
	// The engine will use METADATA_SITE.SKU if the value is '/'. It will
	// skip the entry when left empty ('').
	//
	//
	// 'List.{N}.Platform' is the PWA platform values found in
	// https://web.dev/learn/pwa/detection/#detecting_related_installed_apps
	//
	// Known values are:
	//   (1) 'chrome_web_store' - Google Chrome Web Store
	//   (2) 'play'             - Google Play Store
	//   (3) 'chromeos_play'    - Chrome OS Play Store
	//   (4) 'webapp'           - Web application
	//   (5) 'windows'          - Windows Store
	//   (6) 'f-droid'          - F-Droid Store
	//   (7) 'amazon'           - Amazon App Store
	//
	// The engine will skip the entry when left empty ('') or the value is
	// an invalid one.
	//
	//
	// 'List.N.URL' is the URL to the related application. The engine will
	// use the base URL if the value is '/'. It will skip the entry when
	// left empty ('').
	//
	// Example:
	//       List: [{
	//               ID: '/',
	//               Platform: 'webapp',
	//               URL: '/',
	//       }, {
	//               ...,
	//       }],
	Related_Application: {
		Prioritized: false,
		List: [{
			ID: '/',
			Platform: 'webapp',
			URL: '/',
		}],
	},


	// 'Shortcuts' holds the list of shortcut items for the app
	// (e.g. long pressing the app launcher on Android phone for menu
	// loading).
	//
	//
	// 'URL' is the shortcut URL to launch. This should be
	// a relative URL. The engine will skip the entry when left empty ('').
	//
	//
	// 'Name_Long' is the shortcut's long name. This field is
	// internationalized (i18n). The engine will skip the entry when left
	// empty ('').
	//
	//
	// 'Name_Short' is the shortcut's short name. This field is
	// internationalized (i18n). The engine will skip the entry when left
	// empty ('').
	//
	//
	// 'Description' is the shortcut's short pitch. This field is
	// internationalized (i18n). The engine will skip the entry when left
	// empty ('').
	//
	//
	// 'Icons' are the list of display icon for the shortcut.
	//
	//  (1) 'Source' is the icon's source URL. The engine can convert
	//       relative URL to its absolute version in production mode
	//       autonomously. It will skip the entry if left empty ('').
	//  (2) 'Type' is the icon's MIME ID. The engine will skip the entry
	//      if left empty ('').
	//  (3) 'Purpose' is the icon's PWA use intent. the value can be:
	//         (a) 'any'      = use in any mode; OR
	//         (b) 'maskable' = use only for color re-masking.
	//  (4) 'Width' and 'Height' are the default dimension of the icon
	//      in pixel unit. The engine will skip the entry if any of them
	//      is invalid (less than or equal to 0).
	//
	//  Example:
	//          Icons: [{
	//                  Source: '/logos/icon_57x57.png',
	//                  Type: 'image/png',
	//                  Purpose: 'any',
	//                  Width: 57,
	//                  Height: 57,
	//          }, {
	//                  ...
	//          }],
	Shortcuts: [{
		URL: '/',
		Name_Long: {
			"en": "Dashboard",
		},
		Name_Short: {
			"en": "Dashboard",
		},
		Description: {
			"en": "To the main overview page.",
		},
		Icons: [{
			Source: '/logos/icon_1200x1200.png',
			Type: 'image/png',
			Purpose: 'any',
			Width: 1200,
			Height: 1200,
		}],
	}],


	// 'Screenshots' are the list of marketing screenshots for the
	// application.
	//
	//  (1) 'Label' is the text label of the media. It can be used as the
	//      alternate text if required. This field is internationalized
	//      (i18n). The engine will skip the entry if left empty ('').
	//  (2) 'Form_Factor' is the setting for displaying the screenshot on
	//      certain display dimension. Only 3 values are accepted:
	//        (a) empty ('') = always display the media; OR
	//        (b) 'wide'     = only display on horizontal widescreen; OR
	//        (c) 'narrow'   = only display on vertical narrow screen.
	//  (3) 'Source' is the screenshot's source URL. The engine can
	//       convert relative URL to its absolute version in production
	//       mode autonomously. If left empty (''), the engine will skip
	//       the entry.
	//  (4) 'Type' is the icon's MIME ID. The engine will skip the entry
	//      if left empty.
	//  (5) 'Width' and 'Height' are the default dimension
	//      of the icon in pixel. The engine will skip the entry if any
	//      of them is invalid (less than or equal to 0).
	//
	//  Example:
	//          Screenshots: [{
	//                  Label: {
	//                          "en": 'Welcome',
	//                  },
	//                  Form_Factor: 'wide',
	//                  Source: '/screenshots/welcome_1200x630.png',
	//                  Type: 'image/png',
	//                  Width: 1200,
	//                  Height: 630,
	//          }, {
	//                  ...
	//          }],
	Screenshots: [{
		Label: {
			"en": 'Welcome',
		},
		Form_Factor: 'wide',
		Source: '/screenshots/welcome_1200x630.png',
		Type: 'image/png',
		Width: 1200,
		Height: 630,
	}, {
		Label: {
			"en": 'Welcome',
		},
		Form_Factor: 'narrow',
		Source: '/screenshots/welcome_630x1200.png',
		Type: 'image/png',
		Width: 630,
		Height: 1200,
	}, {
		Label: {
			"en": 'Welcome',
		},
		Form_Factor: '',
		Source: '/screenshots/welcome_1200x1200.png',
		Type: 'image/png',
		Width: 1200,
		Height: 1200,
	}],


	// 'Icons' are the list of display icon for the site.
	//
	//  (1) 'Source' is the icon's source URL. The engine can convert
	//       relative URL to its absolute version in production mode
	//       autonomously. It will skip the entry if left empty ('').
	//  (2) 'Type' is the icon's MIME ID. The engine will skip the entry
	//      if left empty ('').
	//  (3) 'Purpose' is the icon's PWA use intent. the value can be:
	//         (a) 'any'      = use in any mode; OR
	//         (b) 'maskable' = use only for color re-masking.
	//  (4) 'Width' and 'Height' are the default dimension of the icon
	//      in pixel unit. The engine will skip the entry if any of them
	//      is invalid (less than or equal to 0).
	//
	//  Example:
	//          Icons: [{
	//                  Source: '/logos/icon_57x57.png',
	//                  Type: 'image/png',
	//                  Purpose: 'any',
	//                  Width: 57,
	//                  Height: 57,
	//          }, {
	//                  ...
	//          }],
	Icons: [{
		Source: '/logos/icon_57x57.png',
		Type: 'image/png',
		Purpose: 'any',
		Width: 57,
		Height: 57,
	}, {
		Source: '/logos/icon_60x60.png',
		Type: 'image/png',
		Purpose: 'any',
		Width: 60,
		Height: 60,
	}, {
		Source: '/logos/icon_70x70.png',
		Type: 'image/png',
		Purpose: 'any',
		Width: 70,
		Height: 70,
	}, {
		Source: '/logos/icon_72x72.png',
		Type: 'image/png',
		Purpose: 'any',
		Width: 72,
		Height: 72,
	}, {
		Source: '/logos/icon_76x76.png',
		Type: 'image/png',
		Purpose: 'any',
		Width: 76,
		Height: 76,
	}, {
		Source: '/logos/icon_96x96.png',
		Type: 'image/png',
		Purpose: 'any',
		Width: 96,
		Height: 96,
	}, {
		Source: '/logos/icon_114x114.png',
		Type: 'image/png',
		Purpose: 'any',
		Width: 114,
		Height: 114,
	}, {
		Source: '/logos/icon_120x120.png',
		Type: 'image/png',
		Purpose: 'any',
		Width: 120,
		Height: 120,
	}, {
		Source: '/logos/icon_128x128.png',
		Type: 'image/png',
		Purpose: 'any',
		Width: 128,
		Height: 128,
	}, {
		Source: '/logos/icon_144x144.png',
		Type: 'image/png',
		Purpose: 'any',
		Width: 144,
		Height: 144,
	}, {
		Source: '/logos/icon_150x150.png',
		Type: 'image/png',
		Purpose: 'any',
		Width: 150,
		Height: 150,
	}, {
		Source: '/logos/icon_152x152.png',
		Type: 'image/png',
		Purpose: 'any',
		Width: 152,
		Height: 152,
	}, {
		Source: '/logos/icon_180x180.png',
		Type: 'image/png',
		Purpose: 'any',
		Width: 180,
		Height: 180,
	}, {
		Source: '/logos/icon_192x192.png',
		Type: 'image/png',
		Purpose: 'any',
		Width: 192,
		Height: 192,
	}, {
		Source: '/logos/icon_310x310.png',
		Type: 'image/png',
		Purpose: 'any',
		Width: 310,
		Height: 310,
	}, {
		Source: '/logos/icon_384x384.png',
		Type: 'image/png',
		Purpose: 'any',
		Width: 384,
		Height: 384,
	}, {
		Source: '/logos/icon_480x480.png',
		Type: 'image/png',
		Purpose: 'any',
		Width: 480,
		Height: 480,
	}, {
		Source: '/logos/icon_512x512.png',
		Type: 'image/png',
		Purpose: 'any',
		Width: 512,
		Height: 512,
	}, {
		Source: '/logos/icon_1024x1024.png',
		Type: 'image/png',
		Purpose: 'any',
		Width: 1024,
		Height: 1024,
	}, {
		Source: '/logos/icon_1200x1200.svg',
		Type: 'image/svg+xml',
		Purpose: 'any',
		Width: 1200,
		Height: 1200,
	}, {
		Source: '/logos/icon_1200x1200.png',
		Type: 'image/png',
		Purpose: 'any',
		Width: 1200,
		Height: 1200,
	}, {
		Source: '/logos/icon-monochrome_1200x1200.svg',
		Type: 'image/svg+xml',
		Purpose: 'maskable',
		Width: 1200,
		Height: 1200,
	}],


	// 'Display' is the PWA's display configurations for this application.
	//
	// (1) 'Primary' is the primary display mode.
	// (2) 'Overrides' is the list of available overriding display modes.
	// (3) 'Orientation' is the default locked-in display orientation.
	//
	// Both 'Primary' and 'Overrides' can accept the following values:
	//   (a) 'fullscreen' = fullscreen cinematic mode; OR
	//   (b) 'standalone' = open and feels like native app; OR
	//   (c) 'minimal-ui' = like 'standalone' but with minimal UI; OR
	//   (d) 'browser'    = open in browser mode.
	//
	// 'Orientation' can accept the following values:
	//   (a) 'any'                 = any orientation; OR
	//   (b) 'natural'             = locks to the device's most natural
	//                               manner on-start; OR
	//   (c) 'portrait'            = locks to vertical mode that allows
	//                               180deg turn depending on the device; OR
	//   (d) 'portrait-primary'    = locks to the device's natural vertical
	//                               mode; OR
	//   (e) 'portrait-secondary'  = locks to the device's natural vertical
	//                               mode with 180deg turn; OR
	//   (f) 'landscape'           = locks to horizontal mode that allows
	//                               180deg turn depending on the device; OR
	//   (g) 'landscape-primary'   = locks to the device's natural
	//                               horizontal mode; OR
	//   (h) 'landscape-secondary' = locks to the device's natural
	//                               horizontal mode with 180deg turn.
	Display: {
		Primary: 'standalone',
		Overrides: [
			"standalone",
			"minimal-ui",
			"browser",
		],
		Orientation: 'any',
	},
}
